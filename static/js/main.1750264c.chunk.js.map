{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","res","json","users","catch","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,2BAAqEC,IAAI,YAChF,6BAA4BL,EAAMG,QAAQG,MAAjCN,EAAMG,QAAQC,IACvB,6BAAKJ,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCFdC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCsDjEG,G,wDAlDb,aAAe,IAAD,8BACZ,gBA2BFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SA1BpC,EAAKC,MAAQ,CACXb,SAAU,CACR,CACEH,KAAK,eACLF,GAAG,QACH,CACAE,KAAK,UACLF,GAAG,QACH,CACAE,KAAK,SACLF,GAAG,SAGPe,YAAY,IAEd,EAAKN,aAAa,EAAKA,aAAaU,KAAlB,gBAlBN,E,gEAqBM,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAO,OAAOA,EAAIC,UACvBF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACT,SAASmB,OACpCC,U,+BAOO,IAAD,EAC0BC,KAAKR,MAA9Bb,EADD,EACCA,SAASU,EADV,EACUA,YACXY,EAAiBtB,EAASuB,QAAO,SAAA7B,GAAO,OAC5CA,EAAQG,KAAK2B,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAciB,KAAKjB,eAE5D,cAAC,EAAD,CAAUJ,SAAUsB,W,GA3CVI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1750264c.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\nexport const Card = props =>(\n    <div className='card-container'>\n        <img src={`https://robohash.org/${props.monster.id}1?set=set2&size=180x180`} alt=\"monster\"/>\n         <h1 key={props.monster.id}>{props.monster.name}</h1>\n         <h2>{props.monster.name}</h2>\n         <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component'\nimport './card-list.styles.css';\n\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster}></Card>\n        )\n        )}\n    </div>\n);\n","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder,handleChange})=>(\n    <input type=\"search\" className='search' placeholder={placeholder} onChange={handleChange}/>\n)\n    \n","import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n        {\n          name:'Frankenstein',\n          id:'asc1'\n        },{\n          name:'Dracula',\n          id:'asc2'\n        },{\n          name:'Zombie',\n          id:'asc3'\n        }\n      ],\n      searchField:''\n    }\n    this.handleChange=this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=>{ return res.json()})\n    .then(users=>this.setState({monsters:users}))\n    .catch()\n  }\n\n  handleChange= (e)=>{\n    this.setState({searchField:e.target.value});\n  }\n\n  render() {\n    const { monsters,searchField } = this.state;\n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\n\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}